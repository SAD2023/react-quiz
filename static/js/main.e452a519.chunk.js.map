{"version":3,"sources":["App.js","reportWebVitals.js","Question.js","End.js","index.js"],"names":["App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Q","props","number","prompt","id","type","hidden","answer","Question","End","ReactDOM","render","StrictMode","document","getElementById","number_of_answered","number_of_correct","handleSubmit","text","event","preventDefault","correct_answer","innerHTML","toString","trim","attempted_answer","value","total","i","stringCurrent","form_name","onsubmit","onclick","window","location","reload"],"mappings":"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","file":"static/js/main.e452a519.chunk.js","sourcesContent":["import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"title-wrapper\">\n\n      <h1 className=\"title\">Welcome to the Quiz!</h1>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './Question.css';\r\n\r\n/** To add a question to the page, simply add a 'Q' with the prompt, answer, and\r\n * the question number. Make sure to increase 'total' in index.js by the number\r\n * of questions added.\r\n */\r\nfunction Question() {\r\n  return (<div>\r\n    <Q prompt=\"Who was the first president of the US?\" answer=\"George Washington\" number=\"1\" />\r\n    <Q prompt=\"Who is the current US president?\" answer=\"Joe Biden\" number=\"2\" />\r\n    <Q prompt=\"Is Montana an U.S. State?\" answer=\"Yes\" number=\"3\" />\r\n    <Q prompt=\"How many members are in the senate?\" answer=\"100\" number=\"4\" />\r\n    <Q prompt=\"What year did the American revolution begin?\" answer=\"1765\" number=\"5\" />\r\n    <Q prompt=\"What year did the American civil war start?\" answer=\"1861\" number=\"6\" />\r\n    <Q prompt=\"What year did the Pilgrims reach America?\" answer=\"1620\" number=\"7\" />\r\n    <Q prompt=\"How many years did the prohibition last?\" answer=\"13\" number=\"8\" />\r\n    <Q prompt=\"FDR served for how many years?\" answer=\"12\" number=\"9\" />\r\n    <Q prompt=\"How many nations are in NATO?\" answer=\"30\" number=\"10\" />\r\n  </div>\r\n  )\r\n}\r\n\r\n/** Q represents a complete question. Props have:\r\n * - a number representing the question number\r\n * - a prompt which has the question itself\r\n * - the answer to the question\r\n */\r\nconst Q = (props) => {\r\n  let { number } = props\r\n  return (\r\n    <div className=\"question\" >\r\n      <h3 className=\"prompt\">{props.prompt}</h3>\r\n      <form id={\"question-form \" + number}>\r\n        <input id={number} className=\"answer-boxes\" type=\"text\"></input>\r\n        <input type=\"submit\" hidden className=\"hiddenForPC\"></input>\r\n      </form>\r\n      <p id={\"answer \" + number} hidden> {props.answer}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question;","import './End.css';\r\n\r\n// The div at the end with the score and the refresh buttton\r\nfunction End() {\r\n  return (<div className=\"ending-div\" id=\"ending-wrapper\" hidden>\r\n    <h3 id=\"ending-score\"></h3>\r\n    <button id=\"end-button\">Take it again</button>\r\n  </div>)\r\n}\r\n\r\nexport default End;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Question from './Question';\nimport End from './End';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Question />\n  </React.StrictMode>,\n  document.getElementById('body')\n);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <End />\n  </React.StrictMode>,\n  document.getElementById('end')\n);\n\n// number of questions answered so far, 0 at the start\nvar number_of_answered = 0\n\n// number of questions correctly answerd, 0 at the start\nvar number_of_correct = 0\n\n/** Handles the submission of an asnwer: \n * - Increases number_of_answered by 1\n * - Reveals the div below the answer-box\n * - If the answer if correct, increases number_of_correct by 1, and changes the \n *   inner html to say \"Correct Answer!\"\n * - If the answer is incorrect, the inner html is changed to \"Wrong Answer\"\n * - If the number_of_answered is the same as the total, meaning all questions \n *   have been answered, it reveals the div at the end, and changes the inner \n *   html to say the score. E.g. \"4/10\"\n */\nfunction handleSubmit(text) {\n  return event => {\n    event.preventDefault()\n    var correct_answer =\n      document.getElementById(\"answer \" + text).innerHTML.toString().trim()\n    var attempted_answer = document.getElementById(text).value.toString().trim()\n    document.getElementById(text).value = \"\"\n    number_of_answered++\n\n    if (attempted_answer.toString() === correct_answer.toString()) {\n      document.getElementById(\"answer \" + text).innerHTML = \"Correct Answer!\"\n      document.getElementById(\"answer \" + text).hidden = false\n      number_of_correct++\n    }\n\n    else {\n      document.getElementById(\"answer \" + text).innerHTML = \"Wrong Answer\"\n      document.getElementById(\"answer \" + text).hidden = false\n    }\n\n    if (number_of_answered === total) {\n      var ending_div = document.getElementById(\"ending-score\")\n      ending_div.innerHTML = \"Quiz Completed! Your score is: \" +\n        number_of_correct.toString() + \"/\" + number_of_answered.toString()\n      document.getElementById(\"ending-wrapper\").hidden = false\n    }\n  }\n}\n\n// The total number of questions\nvar total = 10\n\n// Adds an event listener to every answer-box\nfor (var i = 1; i <= total; i++) {\n  var stringCurrent = i.toString()\n  var form_name = \"question-form \" + stringCurrent\n  var form = document.getElementById(form_name)\n  form.onsubmit = handleSubmit(stringCurrent)\n}\n\n// reloads the page when the button at the end is clicked\ndocument.getElementById(\"end-button\").onclick = () => {\n  window.location.reload();\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}